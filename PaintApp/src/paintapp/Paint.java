/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paintapp;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.geom.Line2D;
import java.awt.Image;

import javax.swing.JColorChooser;

/**
 *
 * @author PhongNTSE1997
 */
public class Paint extends javax.swing.JFrame {
    Graphics g = null;
    Point p1 = null, p2 = null;
    Color color = Color.RED;
    
    
    public Paint() {
        initComponents();
        g= this.plines.getGraphics();
        this.rdFill.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pchooser = new javax.swing.JPanel();
        btnColor = new javax.swing.JButton();
        rdDraw = new javax.swing.JRadioButton();
        rdFill = new javax.swing.JRadioButton();
        jtab = new javax.swing.JTabbedPane();
        plines = new javax.swing.JTabbedPane();
        pElipses = new javax.swing.JTabbedPane();
        pRec = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnColor.setText("Select Color");
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdDraw);
        rdDraw.setText("Draw Only");

        buttonGroup1.add(rdFill);
        rdFill.setText("Draw and Fill");

        javax.swing.GroupLayout pchooserLayout = new javax.swing.GroupLayout(pchooser);
        pchooser.setLayout(pchooserLayout);
        pchooserLayout.setHorizontalGroup(
            pchooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pchooserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnColor)
                .addGap(32, 32, 32)
                .addComponent(rdDraw)
                .addGap(31, 31, 31)
                .addComponent(rdFill)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        pchooserLayout.setVerticalGroup(
            pchooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pchooserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pchooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnColor)
                    .addComponent(rdDraw)
                    .addComponent(rdFill))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jtab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabMouseClicked(evt);
            }
        });

        plines.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                plinesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                plinesMouseReleased(evt);
            }
        });
        jtab.addTab("Lines", plines);

        pElipses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pElipsesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pElipsesMouseReleased(evt);
            }
        });
        jtab.addTab("Elipses", pElipses);

        pRec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pRecMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pRecMouseReleased(evt);
            }
        });
        jtab.addTab("Rectangles", pRec);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pchooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jtab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtab, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
         // TODO add your handling code here:
         color = JColorChooser.showDialog(this, "choose a color", Color.BLACK);
         g.setColor(color);
         
         
    }//GEN-LAST:event_btnColorActionPerformed

    private void jtabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabMouseClicked
        // TODO add your handling code here:
        int index = this.jtab.getSelectedIndex();
        switch (index){
            case 0: g = plines.getGraphics();
            this.rdDraw.setSelected(true);
            this.rdFill.setEnabled(false);
            break;
            case 1: g = pElipses.getGraphics();
            this.rdFill.setEnabled(true);
            break;
            case 2: g= pRec.getGraphics();
            this.rdFill.setEnabled(true);
            break;

        }
        g.setColor(color);
    }//GEN-LAST:event_jtabMouseClicked

    private void plinesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plinesMousePressed
         // TODO add your handling code here:
         p1 = evt.getPoint();
    }//GEN-LAST:event_plinesMousePressed

    private void plinesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plinesMouseReleased
         // TODO add your handling code here:
         p2 = evt.getPoint();
         g.drawLine(p1.x, p1.y, p2.x, p2.y);
         p1 = p2 = null;
    }//GEN-LAST:event_plinesMouseReleased

    private void pElipsesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pElipsesMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();
        
    }//GEN-LAST:event_pElipsesMousePressed

    private void pElipsesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pElipsesMouseReleased
         // TODO add your handling code here:
         p2 = evt.getPoint();
         int left = p1.x<p2.x? p1.x : p2.x;
         int top = p1.y<p2.y? p1.y : p2.y;
         int width = p1.x - p2.x;
         if(width < 0) width = -width;
         int height = p1.y - p2.y;
         if(height < 0) height = -height;
         if(rdDraw.isSelected())
             g.drawOval(left, top, width, height);
         else
             g.fillOval(left, top, width, height);
         p1 = p2 = null;
    }//GEN-LAST:event_pElipsesMouseReleased

    private void pRecMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pRecMousePressed
        // TODO add your handling code here:
         p1 = evt.getPoint();
    }//GEN-LAST:event_pRecMousePressed

    private void pRecMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pRecMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
         int left = p1.x<p2.x? p1.x : p2.x;
         int top = p1.y<p2.y? p1.y : p2.y;
         int width = p1.x - p2.x;
         if(width < 0) width = -width;
         int height = p1.y - p2.y;
         if(height < 0) height = -height;
         if(rdDraw.isSelected())
             g.drawRect(left, top, width, height);
         else
             g.fillRect(left, top, width, height);
         p1 = p2 = null;
    }//GEN-LAST:event_pRecMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColor;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTabbedPane jtab;
    private javax.swing.JTabbedPane pElipses;
    private javax.swing.JTabbedPane pRec;
    private javax.swing.JPanel pchooser;
    private javax.swing.JTabbedPane plines;
    private javax.swing.JRadioButton rdDraw;
    private javax.swing.JRadioButton rdFill;
    // End of variables declaration//GEN-END:variables
}
